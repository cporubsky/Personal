<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAAAAACoCAAAJgAAABAQEAAAAAAAKAEAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAAAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAA/wAAAAAgAABAIAAAgCAAAP8gAAAAQAAAQEAAAIBA
        AAD/QAAAAGAAAEBgAACAYAAA/2AAAACAAABAgAAAgIAAAP+AAAAAoAAAQKAAAICgAAD/oAAAAMAAAEDA
        AACAwAAA/8AAAAD/AABA/wAAgP8AAP//AAAAACAAQAAgAIAAIAD/ACAAACAgAEAgIACAICAA/yAgAABA
        IABAQCAAgEAgAP9AIAAAYCAAQGAgAIBgIAD/YCAAAIAgAECAIACAgCAA/4AgAACgIABAoCAAgKAgAP+g
        IAAAwCAAQMAgAIDAIAD/wCAAAP8gAED/IACA/yAA//8gAAAAQABAAEAAgABAAP8AQAAAIEAAQCBAAIAg
        QAD/IEAAAEBAAEBAQACAQEAA/0BAAABgQABAYEAAgGBAAP9gQAAAgEAAQIBAAICAQAD/gEAAAKBAAECg
        QACAoEAA/6BAAADAQABAwEAAgMBAAP/AQAAA/0AAQP9AAID/QAD//0AAAABgAEAAYACAAGAA/wBgAAAg
        YABAIGAAgCBgAP8gYAAAQGAAQEBgAIBAYAD/QGAAAGBgAEBgYACAYGAA/2BgAACAYABAgGAAgIBgAP+A
        YAAAoGAAQKBgAICgYAD/oGAAAMBgAEDAYACAwGAA/8BgAAD/YABA/2AAgP9gAP//YAAAAIAAQACAAIAA
        gAD/AIAAACCAAEAggACAIIAA/yCAAABAgABAQIAAgECAAP9AgAAAYIAAQGCAAIBggAD/YIAAAICAAECA
        gACAgIAA/4CAAACggABAoIAAgKCAAP+ggAAAwIAAQMCAAIDAgAD/wIAAAP+AAED/gACA/4AA//+AAAAA
        oABAAKAAgACgAP8AoAAAIKAAQCCgAIAgoAD/IKAAAECgAEBAoACAQKAA/0CgAABgoABAYKAAgGCgAP9g
        oAAAgKAAQICgAICAoAD/gKAAAKCgAECgoACAoKAA/6CgAADAoABAwKAAgMCgAP/AoAAA/6AAQP+gAID/
        oAD//6AAAADAAEAAwACAAMAA/wDAAAAgwABAIMAAgCDAAP8gwAAAQMAAQEDAAIBAwAD/QMAAAGDAAEBg
        wACAYMAA/2DAAACAwABAgMAAgIDAAP+AwAAAoMAAQKDAAICgwAD/oMAAAMDAAEDAwACAwMAA/8DAAAD/
        wABA/8AAgP/AAP//wAAAAP8AQAD/AIAA/wD/AP8AACD/AEAg/wCAIP8A/yD/AABA/wBAQP8AgED/AP9A
        /wAAYP8AQGD/AIBg/wD/YP8AAID/AECA/wCAgP8A/4D/AACg/wBAoP8AgKD/AP+g/wAAwP8AQMD/AIDA
        /wD/wP8AAP//AED//wCA//8A////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//////AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAP+zrmZiQmb/YgAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/imJBYmJCs/8A//8AAAAA//8AAAAA
        AAAAAAAAAAAA/45iYmJiYmb/AP+zrv8AAP+3jvv/AAAAAAAAAAAAAAD/jkFiYmJBjv8A/2ZBrtvbs2JB
        Ztf/AAAAAAAAAAAAAP9mYmJiYkGO/wDXQmJBYmJBYmJiYtv/AAAAAAAAAAAA/2JiYmJiQY7/AP9iYmJi
        YmJiYmJCQbP/AAAAAAAA/wD/ikJiYmJiZv8A/2ZiYmJiYmJiZmJB2/8AAAAAAP9m/wD/QWJiYmJBiv8A
        /0JBYmJCZtf/+4rX/wAAAAAA/0GK/wD/QWJiYmJBjv8A/4pmYmKzAAAA/9sAAAAAAAD/YkGK/wD/YkFi
        YmJBZv////////8AAAAA//8AAAAAAP9iYkFm////imJBQUFBQUJiZmZmjgAAAAAA2/8AAAAA/2JiYmJB
        Zv///4qOZmZmZoqO////1wAAAP+zivsAAAD/YmJiYmJCQWaO//////////+KikFis////4pBQvsAAP9i
        YmJiYmJiYmJCQUFiYkJBQWJiYmJBZopmQmJBZv8A/2JiYmJiYmJiYmJiYmJiYmJiYmJiYmJiQWJiYmJB
        sv//YmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJm//9iYmJiYmJiYmJiYmJiYmJiYmJiYmJiYmJi
        YmJCQWr//2JiYmJiYkFiZmJBYmJiYmJiYmJiYmJiYmJBQWbX/wD/YmJiYkJi/////7JiYmJiYmJiYmJi
        YkFCYoqz/wAAAP9iQUFBZv+uZmZm/7JiYmJiYmJiYmJmjtf7/wAAAAAAAP+Kimb/akFBQUFB/2ZiYmJi
        QUFCYor7/wAAAAAAAAAAAP///7JmZmZmZor/ZmJiYmaOstf7/wAAAAAAAAAAAAAAAAD//////////wD/
        ////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////////////////////g////gD///wBPP/4Ahg/+AI
        AH/gCAA/4AgAH6AIAB8QBAAfCAIHPwQAB58AAAfPAAADhwAAAAMAAAABAAAAAAAAAAAAAAAAAAAAAQAA
        AAcAAAAfgAAAf8AAAf/wCA///////////////////////ygAAAAQAAAAIAAAAAEABAAAAAAAgAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8AAAAAAAAAAAAAAAAAAAAAAAB1WAAAAAAAAFVXCHCIAAAHVVB1VVWAAAdV
        WAVVVVcAgIVVd1WAcABVeFVYVXAAAFVYd4d1hwiAVVVVhVVVhVhVVVVVVVVVVVVVVVVVVVVXVViIVVVV
        hwAIhVWFVYcAAAAAAAAAAAAAAAAAAAAAAAD//6AA//+gAMP/oADCT6AAhAegAIIDoABAF6AAAB+gAAAJ
        oAAAAKAAAACgAAAAoAAAA6AAgA+gAP//oAD//8AA
</value>
  </data>
</root>